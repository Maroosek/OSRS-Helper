// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OSRSHelper.Data;

#nullable disable

namespace OSRSHelper.Migrations
{
    [DbContext(typeof(OSRSDbContext))]
    [Migration("20240326091408_FarmType-Tweak")]
    partial class FarmTypeTweak
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OSRSHelper.Models.FarmSpot", b =>
                {
                    b.Property<int>("FarmSpotId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FarmSpotId"));

                    b.Property<int?>("FarmTypeId")
                        .HasColumnType("int");

                    b.Property<string>("SpotName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Time")
                        .HasColumnType("int");

                    b.HasKey("FarmSpotId");

                    b.HasIndex("FarmTypeId");

                    b.ToTable("FarmSpots");
                });

            modelBuilder.Entity("OSRSHelper.Models.FarmType", b =>
                {
                    b.Property<int>("FarmTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FarmTypeId"));

                    b.Property<int>("ActionTime")
                        .HasColumnType("int");

                    b.Property<string>("FarmName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FarmTypeId");

                    b.ToTable("FarmTypes");
                });

            modelBuilder.Entity("OSRSHelper.Models.Material", b =>
                {
                    b.Property<int>("MaterialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaterialId"));

                    b.Property<string>("MaterialName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaterialValue")
                        .HasColumnType("int");

                    b.HasKey("MaterialId");

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("OSRSHelper.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int>("FarmTypeId")
                        .HasColumnType("int");

                    b.Property<int>("MaterialId")
                        .HasColumnType("int");

                    b.Property<int?>("MaterialSecondId")
                        .HasColumnType("int");

                    b.Property<int>("ProductExperience")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductValue")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("FarmTypeId");

                    b.HasIndex("MaterialId");

                    b.HasIndex("MaterialSecondId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("OSRSHelper.Models.FarmSpot", b =>
                {
                    b.HasOne("OSRSHelper.Models.FarmType", "FarmType")
                        .WithMany()
                        .HasForeignKey("FarmTypeId");

                    b.Navigation("FarmType");
                });

            modelBuilder.Entity("OSRSHelper.Models.Product", b =>
                {
                    b.HasOne("OSRSHelper.Models.FarmType", "FarmType")
                        .WithMany()
                        .HasForeignKey("FarmTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OSRSHelper.Models.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OSRSHelper.Models.Material", "MaterialSecond")
                        .WithMany()
                        .HasForeignKey("MaterialSecondId");

                    b.Navigation("FarmType");

                    b.Navigation("Material");

                    b.Navigation("MaterialSecond");
                });
#pragma warning restore 612, 618
        }
    }
}
